 Parsed options:
   test:
     default                           : All
     shorthelp                         : Decide what to test (--help for more info)
     shortname                         : t
     help:
       Usage:
         Specify, as a yaml list, the functionalities which have to be tested
       Allowed values:
       - yaml
       - yaml_extras
       - yaml_parse
       - exceptions
       - trees
       - trees_extras
       - allocations
   test2:
     default                           : 1
     shorthelp                         : this is another test option
     shortname                         : s
   test3:
     default                           : None
     shorthelp                         : this is a test option
     shortname                         : T
     help:
       Usage:
         Unused option3, just for testing the command line parser, also the long help lines 
         have to be tested in order to understand if it works
     conflicts: [test2, test]
 Parsed info:
   test                                : All
   test2                               : 1
  #AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
  #BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
  #B
  #CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
  #CC
  #DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD
  #DDD
---
  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Yaml Output Module Test
 Test:
   Short sentence                      :  Yes
   Foo: {one:  1, two:  2}
   toto: {one:  1, two:  2}
 Is 1.0 a real string                  :  Yes
 Is 1.0 a integer string               :  No
 Is 1.0 a logical string               :  No
 Is 1 a real string                    :  Yes
 Is 1 a integer string                 :  Yes
 Is 1 a logical string                 :  No
 Is Yes a real string                  :  No
 Is Yes a integer string               :  No
 Is Yes a logical string               :  Yes
 Is No a real string                   :  No
 Is No a integer string                :  No
 Is No a logical string                :  Yes
 Is ./ a real string                   :  No
 Is ./ a integer string                :  No
 Is ./ a logical string                :  No
 Is 0. a real string                   :  Yes
 Is 0. a integer string                :  No
 Is 0.000000000E+00 a real string      :  Yes
 Is 0.000000000E+00 a integer string   :  No
---
 Test:
   I have a very long sentence in order to test if yaml_output fails to print that:  Yes
   Foo: {one:  1, two:  2}
   toto: {one:  1, two:  2}
   Build Configure line:
     $(top_builddir)/src/flib/libflib.a -labinit -lxc   -lOpenCL -lm -lstdc++ -letsf_io_utils 
     -letsf_io -lnetcdff -lnetcdf -lscalapack-openmpi -lblacs-openmpi -lblacsF77init-openmpi 
     -llapack -lblas -larchive   -lyaml -pthread -lgthread-2.0 -lrt -lgio-2.0 -lgobject-2.0 
     -lglib-2.0   -lgio-2.0 -lgobject-2.0 -lglib-2.0
   Build Configure line again:
     FC=/opt/openmpi-1.6.1/bin/mpif90 FCFLAGS=-O2 -i_dynamic -msse4.2 -heap-arrays 1024 
     -openmp 
     --with-ext-linalg=/opt/intel/composer_xe_2011_sp1.11.339/mkl/lib/intel64/libmkl_scalapack_l
     p64.a  -Wl,--start-group  
     /opt/intel/composer_xe_2011_sp1.11.339/mkl/lib/intel64/libmkl_cdft_core.a 
     /opt/intel/composer_xe_2011_sp1.11.339/mkl/lib/intel64/libmkl_intel_lp64.a 
     /opt/intel/composer_xe_2011_sp1.11.339/mkl/lib/intel64/libmkl_intel_thread.a 
     /opt/intel/composer_xe_2011_sp1.11.339/mkl/lib/intel64/libmkl_core.a 
     /opt/intel/composer_xe_2011_sp1.11.339/mkl/lib/intel64/libmkl_blacs_openmpi_lp64.a 
     -Wl,--end-group -openmp -lpthread -lm
   Long string array: [compiler, compiler, compiler, compiler, compiler, compiler, compiler, 
                       compiler, compiler, compiler]
---
 Vector of characters                  :  []
 Vector of integers                    :  []
 Is it OK?: {Maybe:  Yes, Maybe:  No}
 Vector of double: [ 3.00000E+00,  3.00000E+00,  3.00000E+00,  3.00000E+00,  3.00000E+00, 
                     3.00000E+00,  3.00000E+00,  3.00000E+00,  3.00000E+00,  3.00000E+00, 
                     3.00000E+00]
 Vector of real(kind=8): [ 3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.]
---
  #This document checks the call yaml_comment().
  # [  1.0000000000,  1.0000000000,  1.0000000000,  1.0000000000,  1.0000000000 ]
  #See if this very long comment is correctly treated: [  1.0000000000,  1.0000000000,  
  #1.0000000000,  1.0000000000,  1.0000000000 ]
 Map:
   One                                 :  1
    #No blank 
    #charactersxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    #xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    #xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    #xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    #xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    #xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    #
    #yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
    #yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
    #yyyyyyyyyyyyyy
    #     yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
    #     yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
    #     yyyyyyyyyyyyyyyyyyyyyyyy
---
  #----------------------------------------------------------------------- Yaml Invoice Example
 invoice                               :  34843
 date                                  :  2014-08-27
 bill-to: &id001
   given                               : Chris
   address:
     lines:
       458 Walkman Dr.
       Suite #292
 ship_to                               : *id001
 product:
 - sku                                 : BL394D
   quantity                            :  4
   description                         : Basketball
   price                               :  450.00
 - sku                                 : BL4438H
   quantity                            :  1
   description                         : Super Hoop
   price                               :  2392.00
 tax                                   :  251.42
 total                                 :  4443.520000000000
 comments:
   Late afternoon is best. Backup contact is Nancy Billsmer @ 338-4338.
---
  #--------------------------------------------------- Yaml Invoice Example, using dictionaries
 Retrieve the price value              :  2392.0
 invoice                               : 34843
 date                                  :  2014-08-27
 bill-to:
   given                               : Chris
   family                              : Dumars
   address:
     lines                             : 458 Walkman Dr. Suite #292
     city                              : Royal Oak
     state                             : MI
     postal                            : 48046
 Product:
 - sku                                 : BL34D
   quantity                            : 4
   description                         : Basketball
   price                               : 4.5E+02
 - sku                                 : BL4438
   quantity                            : 1
   description                         : Super Hoop
   price                               : 2.392E+03
 Tax                                   : 2.514199982E+02
 Total                                 : 4.44352002E+03
 Comments:
   Late afternoon is best. Backup contact is Nancy Billsmer @ 338-4338
---
  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Error Handling Module Test
 Raising the TOTO error, errcode       :  24
 ERR_TOTO:
   Id                                  : 24
   Message:
     This is the error message for the error of kind 1 and it is written extensively on 
     purpose to see whether yaml module prints it
   Action:
     For this error, contact the routine developer at mail at univ dot gov
   Callback Procedure Address          : 4207056
 Additional Info                       : Extra message added
  #!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! TOTO
 Print the error ID                    :  24
 Raising the TOTO error, by name, without condition: ERR_TOTO
 ERR_TOTO:
   Id                                  : 24
   Message:
     This is the error message for the error of kind 1 and it is written extensively on 
     purpose to see whether yaml module prints it
   Action:
     For this error, contact the routine developer at mail at univ dot gov
   Callback Procedure Address          : 4207056
 Additional Info                       : Extra message added again
  #!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! TOTO
 Callback done, errcode                :  24
 GENERIC_ERROR:
   Id                                  : 1
   Message                             : UNSPECIFIED
   Action                              : UNKNOWN
 Additional Info                       : Generic error raised, some message here
  #!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Aie
  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Error list
 List of errors defined so far:
 - SUCCESS:
     Id                                : 0
     Message                           : Operation has succeeded
     Action                            : No action
 - GENERIC_ERROR:
     Id                                : 1
     Message                           : UNSPECIFIED
     Action                            : UNKNOWN
 - ERR_NOT_DEFINED:
     Id                                : 2
     Message                           : The error id or name is invalid
     Action                            : Control if the err id exists
 - DICT_KEY_ABSENT:
     Id                                : 3
     Message                           : The dictionary has no key
     Action                            : Internal error, contact developers
 - DICT_ITEM_NOT_VALID:
     Id                                : 4
     Message                           : The item of this list is not correct
     Action                            : Internal error, contact developers
 - DICT_VALUE_ABSENT:
     Id                                : 5
     Message                           : The value for this key/value is absent
 - DICT_INVALID:
     Id                                : 6
     Message                           : Dictionary is not associated
 - DICT_INVALID_LIST:
     Id                                : 7
     Message                           : Current node is not a list
 - DICT_CONVERSION_ERROR:
     Id                                : 8
     Message                           : Conversion error of the dictionary value
     Action                            : Check the nature of the conversion
 - YAML_INVALID:
     Id                                : 9
     Message                           : Generic error of yaml module, invalid operation
 - YAML_STREAM_ALREADY_PRESENT:
     Id                                : 10
     Message                           : The stream is already present
 - YAML_STREAM_NOT_FOUND:
     Id                                : 11
     Message                           : The stream has not been found
 - YAML_UNIT_INCONSISTENCY:
     Id                                : 12
     Message:
       The array of the units is not in agreement with the array of the streams
     Action:
       This is an internal error of yaml_output module, contact developers
 - YAML_PARSE_ERROR:
     Id                                : 13
     Message                           : YAML parse error.
     Action                            : Modify your inputs.
 - YAML_PARSE_UNSUPPORTED:
     Id                                : 14
     Message                           : YAML standard not supported.
     Action                            : kindly ask developers to finish implementation.
 - ERROR_YAML_COMMAND_LINE_PARSER:
     Id                                : 15
     Message                           : Error in yaml parsing of the command line
     Action                            : Check the allowed options and their values (--help)
 - ERR_ALLOCATE:
     Id                                : 16
     Message                           : Allocation error
     Action:
       Control the order of the allocation or if the memory limit has been reached
     Callback Procedure Address        : 4559216
 - ERR_DEALLOCATE:
     Id                                : 17
     Message                           : Deallocation error
     Action:
       Control the order of the allocation or if the memory limit has been reached
     Callback Procedure Address        : 4559216
 - ERR_MEMLIMIT:
     Id                                : 18
     Message                           : Memory limit reached
     Action:
       Control the size of the arrays needed for this run with bigdft-tool program
     Callback Procedure Address        : 4559216
 - ERR_INVALID_COPY:
     Id                                : 19
     Message                           : Copy not allowed
     Action:
       A f_memcpy command failed, probably invalid sizes: check sizes of arrays at runtime
     Callback Procedure Address        : 4559216
 - ERR_INVALID_MALLOC:
     Id                                : 20
     Message                           : Invalid specification of f_malloc
     Action                            : Put coherent data for the memory space allocation
     Callback Procedure Address        : 4559216
 - ERR_MALLOC_INTERNAL:
     Id                                : 21
     Message                           : Internal error of memory profiler
     Action:
       An invalid operation occurs, submit bug report to developers
     Callback Procedure Address        : 4583632
 - ERR_REFERENCE_COUNTERS:
     Id                                : 22
     Message                           : Error in the usage of the reference counter
     Action:
       When a reference counter is present each pointer association should be tracked, check 
       for it
     Callback Procedure Address        : 4583632
 - TIMING_INVALID:
     Id                                : 22
     Message                           : Error in timing routines

     Action                            : Control the running conditions of f_timing routines called
     Callback Procedure Address        : 4580368
 - ERR_TOTO:
     Id                                : 23
     Message:
       This is the error message for the error of kind 1 and it is written extensively on 
       purpose to see whether yaml module prints it
     Action:
       For this error, contact the routine developer at mail at univ dot gov
     Callback Procedure Address        : 4207056
 - ERR_TITI:
     Id                                : 24
     Message                           : test2
     Callback Procedure Address        : 4206992
     Callback Procedure Data Address   : 140734751481200
 - ERR_GRAVE:
     Id                                : 25
     Message                           : test2
     Callback Procedure Address        : 4311008
  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ End of error list
 Additional Info                       : This is the list of the errors
 ERR_TITI:
   Id                                  : 24
   Message                             : test2
   Callback Procedure Address          : 4206992
   Callback Procedure Data Address     : 140734751481200
 Additional Info                       : Now TITI error has been raised
  #!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! TITI
 Callback done                         :  Yes
 Error check value                     :  Yes
 Error check code                      :  No
 Error check code2                     :  Yes
 Error check code, name                :  No
 Error check code, name                :  Yes
  #Test open try
 Error check value before try          :  No
 Number of errors(1)                   :  1
 Number of errors(2)                   :  0
 ID                                    :  24
 MSG                                   : two
 ERR_TOTO:
   Id                                  : 24
   Message:
     This is the error message for the error of kind 1 and it is written extensively on 
     purpose to see whether yaml module prints it
   Action:
     For this error, contact the routine developer at mail at univ dot gov
   Callback Procedure Address          : 4207056
 Number of errors(3)                   :  1
 Error check value after try           :  No
---
  #Now we test dictionaries inside yaml.
 ival not existing, fake value         :  0
 An error has been raised              :  Yes
 Its error id is                       :  5
 DICT_VALUE_ABSENT:
   Id                                  : 5
   Message                             : The value for this key/value is absent
 Additional Info                       : The key is "Toto"
 Error pipe is still full              :  No
 Toto                                  : null
 toto                                  : 1
 titi                                  : 1.0
 tutu: [1, 2]
 List: [a: 0, 4, 1.0]
 New key: {Example: 4}
 List length                           :  3
 Dictionary size                       :  6
 Key1                                  : One
 Key2                                  : Two
 Key3                                  : Three
 Length and size before                :  [  0,  0 ]
 There was a hidden problem here:
   hgrid:
   - new
 Value of dict1//hgrid                 : __list__
 Value retrieved with equal sign       : null
 Value explicitly written in the dictionary: null
 Length and size after                 :  [  1,  0 ]
 Length and size before                :  [  0,  2 ]
 Hidden problem here:
   hgrid:
   - new
 Value of dict1//hgrid                 : __list__
 Value retrieved with equal sign       : null
 Verify that the child is still associated:  Yes
 Length and size after                 :  [  1,  0 ]
---
 List:
 - 1
 - 2
 - 3
---
 Dictionary length                     :  3
 Dictionary size                       :  0
  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Fortran Dictionary Test
 Number of Groups                      : 1
 First: {One: 1, Two: 2, Three: 3, Threeb: 3b}
 Size before removing                  :  4
 First removal:
   Two                                 : 2
   Three                               : 3
   Threeb                              : 3b
 Second removal:
   Three                               : 3
   Threeb                              : 3b
 After pop:
   Number of Groups                    : 1
   First:
     Three                             : 3
     Threeb                            : 3b
     Four                              : 4
 Key found                             :  No
 Second try, Key found                 :  Yes
 Value found                           :  1
 Alternative way                       :  2
 Search for "First" key:
   Three                               : 3
   Threeb                              : 3b
   Four                                : 4
 Extracted value                       :  2
 Size after popping                    :  1
 Size after popping again              : -1
 Complete pop:
   Status of association               :  No
   Size after popping                  : -1
   Present status                      : <nullified dictionary>
 DictA is associated                   :  Yes
 DictA is now of size                  :  3
 DictA is now:
   Three                               : 3
   Threeb                              : 3b
   Four                                : 4
 DictA key                             : First
 Dictionary associated before last pop :  No
 Stack:
 - 5
 - 4
 - 2
 - Test1:
     Toto                              : 5
     Titi                              : 6
 Stack2: [1, 2, 3]
 Stack3: [4, AQ, 3g]
 Stack4                                : 12
 Values retrieved from the dict        :  [  1.0000,  2.0000,  3.0000 ]
 Stack: [5, 4]
 Stack2: [1, 2, 3]
 Stack3: [4, AQ, 3g]
 Stack4                                : 12
 Two values from Stack key             :  [  5.0000,  4.0000,  3.0000 ]
 Array filled with a scalar            :  [  5.0000,  5.0000,  5.0000 ]
  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Prepend dictionary example
 Size of dict A                        :  4
 Dict A:
   Stack: [5, 4]
   Stack2: [1, 2, 3]
   Stack3: [4, AQ, 3g]
   Stack4                              : 12
 Size of dict 2                        :  2
 Dict 2:
   Test1:
     Toto                              : 5
     Titi                              : 6
   Test2:
     Toto                              : 4
     Titi                              : 2
 Test1 and and Test2 are equal         :  No
 Corrected version:
   Test1:
     Toto                              : 4
     Titi                              : 2
   Test2:
     Toto                              : 4
     Titi                              : 2
 Test1 and and Test2 are equal         :  Yes
 Added version:
   Test1:
     Toto                              : 4
     Titi                              : 2
     Tutu                              : 4.00000E+00
   Test2:
     Toto                              : 4
     Titi                              : 2
     Tutu                              : 4.d0
 Test1 and and Test2 are equal         :  Yes
 List of list of zeroes, first version:
 -  [0.0000000000000000, 0.0000000000000000, 0.0000000000000000]
 List of list of zeroes, second version:
 -  [0., 0., 0.]
 Zero1 and and Zero2 are equal         :  Yes
 Keys of first dict                    :  [ Stack, Stack2, Stack3, Stack4 ]
 Keys of second dict                   :  [ Test1, Test2 ]
 Size of prepended                     :  6
 Prepended:
   Test1:
     Toto                              : 4
     Titi                              : 2
     Tutu                              : 4.00000E+00
   Test2:
     Toto                              : 4
     Titi                              : 2
     Tutu                              : 4.d0
   Stack: [5, 4]
   Stack2: [1, 2, 3]
   Stack3: [4, AQ, 3g]
   Stack4                              : 12
 Keys of prepended dict                :  [ Test1, Test2, Stack, Stack2, Stack3, Stack4 ]
 Iterating in dictA                    :  Yes
 Key of dictA                          : Test1
 Value of dictA                        : __dict__
 Iterating in dictA                    :  Yes
 Key of dictA                          : Test2
 Value of dictA                        : __dict__
 Iterating in dictA                    :  Yes
 Key of dictA                          : Stack
 Value of dictA                        : __list__
 Iterating in dictA                    :  Yes
 Key of dictA                          : Stack2
 Value of dictA                        : __list__
 Iterating in dictA                    :  Yes
 Key of dictA                          : Stack3
 Value of dictA                        : __list__
 Iterating in dictA                    :  Yes
 Key of dictA                          : Stack4
 Value of dictA                        : 12
 Item of dictA                         :  0
 Value of dictA                        : Value1
 Item of dictA                         :  1
 Value of dictA                        : Value2
 Item of dictA                         :  2
 Value of dictA                        : Value3
 Item of dictA                         :  3
 Value of dictA                        : Value4
 Item of dictA                         :  4
 Value of dictA                        : Value5
 Item of dictA                         :  5
 Value of dictA                        : Value6
 Item of dictA                         :  6
 Value of dictA                        : Value7
 Item of dictA                         :  7
 Value of dictA                        : Value8
 Item of dictA                         :  8
 Value of dictA                        : Value9
 Item of dictA                         :  9
 Value of dictA                        : Value10
 List in a list:
    #call yaml_sequence("5,unit=0")
    #call yaml_sequence("6,unit=0")
    #call yaml_sequence(advance="no,unit=0")
    #call yaml_sequence_open("",flow=.true.,unit=0)
    #call yaml_sequence("55,unit=0")
    #call yaml_sequence("66,unit=0")
    #call yaml_sequence_close(unit=0)
 - 5
 - 6
 - - 55
   - 66
    #call yaml_sequence("5,unit=0")
    #call yaml_sequence("6,unit=0")
    #call yaml_sequence(advance="no,unit=0")
    #call yaml_sequence_open("",flow=.true.,unit=0)
    #call yaml_sequence("55,unit=0")
    #call yaml_sequence("66,unit=0")
    #call yaml_sequence_close(unit=0)
 - 5
 - 6
 -  [55, 66]
 Item of dictA                         :  0
 Key of dictA                          : null
 Value of dictA                        : 5
 Item of dictA                         :  1
 Key of dictA                          : null
 Value of dictA                        : 6
 Item of dictA                         :  2
 Key of dictA                          : null
 Value of dictA                        : __list__
 Dictionary now:
 - atom: [5.0, 5.0, 5.0]
 Dictionary now2:
 - atom: [6.0, 6.0, 6.0]
 Dictionary now3:
 - atom: [ 7.0,  7.0,  7.0]
 Dictionary now3:
 - atom: [ 8.0,  8.0,  8.0]
 Dictionary:
 -  8.0
 -  8.0
 -  8.0
 i=1:
    8.0
 i=2:
    8.0
 i=3:
    8.0
 i2=1:
    8.0
 i2=2:
    8.0
 i2=3:
    8.0
---
  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Routine-Tree creation example
 Address of first element              :  25734856
 Associated                            :  [  No,  No ]
 Associated                            :  [  Yes,  Yes ]
 Address of first element              :  25734904
 Address of first element, explicit (1):  25734904
 Address of first element, explicit (2):  25734904
 Associated                            :  [  Yes,  No,  Yes ]
  #debug 1
  #debug 2
 Source vector: [ 25,  26,  27,  28,  29,  30,  31,  32,  33,  34,  35,  36,  37,  38,  39, 
                  40,  41,  42,  43,  44,  45,  46,  47,  48,  49,  50,  51,  52,  53,  54, 
                  55,  56,  57,  58,  59,  60,  61,  62,  63,  64,  65,  66,  67,  68,  69, 
                  70,  71,  72,  73,  74,  75,  76,  77,  78,  79,  80,  81,  82,  83,  84, 
                  85,  86,  87]
 Its shape                             :  [  63 ]
 Its rank                              :  1
 Vector difference: [ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
                      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
                                                                          0,  0,  0,  0]
 Source pointer: [ 790,  791,  792,  793,  794,  795,  796,  797,  798,  799,  800,  801, 
                   802,  803,  804,  805,  806,  807,  808,  809,  810,  811,  812,  813, 
                   814,  815,  816,  817,  818,  819,  820,  821,  822,  823]
 Its shape                             :  [  34 ]
 Its rank                              :  1
 Pointer difference: [ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
                       0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0]
 Pointer difference again (should be -1): [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
                                           -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
                                           -1, -1, -1, -1, -1, -1, -1, -1]
 Pointer difference again (should be 0): [ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
                                           0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
                                           0,  0,  0,  0,  0,  0,  0,  0]
 Calling sequence of Main program (routines with * are not closed yet):
 - Main program: [ 8.420E-03,  1, ~*]
   Subroutines:
   - PS_Check: [ 4.447E-03,  1,  52.82%*]
     Subroutines:
     - Routine D: [ 3.984E-03,  1,  89.59%*]
       Subroutines:
       - SubCase 1: [ 2.232E-03,  1,  56.03%]
       - Subcase 2: [ 1.079E-03,  1,  27.08%]
         Subroutines:
         - SubSubcase1: [ 1.008E-03,  1,  93.39%]
       - SubCase 3: [ 8.092E-04,  1,  20.31%*]
     - Routine A: [ 2.525E-04,  1,  5.68%]
     - Routine 0: [ 1.748E-04,  1,  3.93%]
 Routine dictionary:
   25735528:
     [ weight, SubCase 3,  4,  3]
   25758184:
     [ orbital_id, SubCase 3,  28,  4]
 Global dictionary (size 4):
   25734856:
     [ density, Routine 0,  48,  1]
   25735448:
     [ potential, Routine 0,  24,  1]
   Timestamp of Profile initialization:
     2014-08-27 15:37:35.744
   Process Id:
     0
  #Test for debug
  #End test for debug
  #End test for debug2
 Calling sequence of Main program (routines with * are not closed yet):
 - Main program: [ 1.006E-02,  1, ~*]
   Subroutines:
   - PS_Check: [ 6.043E-03,  1,  60.07%*]
     Subroutines:
     - Routine D: [ 4.925E-03,  1,  81.50%]
       Subroutines:
       - SubCase 1: [ 2.232E-03,  1,  45.32%]
       - SubCase 3: [ 1.449E-03,  1,  29.42%]
       - Subcase 2: [ 1.079E-03,  1,  21.91%]
         Subroutines:
         - SubSubcase1: [ 1.008E-03,  1,  93.39%]
     - Routine F: [ 4.346E-04,  1,  7.19%*]
     - Routine A: [ 2.525E-04,  1,  4.18%]
     - Routine 0: [ 1.748E-04,  1,  2.89%]
     - Routine E: [ 6.221E-05,  1,  1.03%]
     - PS_Check: [ 5.464E-05,  2,  0.90%]
 Routine dictionary:
   25734856:
     [ xc_pot, Routine F,  48,  1]
   25758104:
     [ rhopot, Routine F,  48,  1]
 Global dictionary (size 3):
   25735448:
     [ potential, Routine 0,  24,  1]
   Timestamp of Profile initialization:
     2014-08-27 15:37:35.744
   Process Id:
     0
 Parsed string:
 -  [elem1, 1.d0, elem2, 3.d0]
 Associated after pop                  :  No
 Loaded string:
 - elem1
 - 1.d0
 - elem2
 - 3.d0
 Calling sequence of Main program (routines with * are not closed yet):
 - Main program: [ 1.146E-02,  1, ~*]
   Subroutines:
   - PS_Check: [ 7.460E-03,  1,  65.09%*]
     Subroutines:
     - Routine D: [ 4.925E-03,  1,  66.02%]
       Subroutines:
       - SubCase 1: [ 2.232E-03,  1,  45.32%]
       - SubCase 3: [ 1.449E-03,  1,  29.42%]
       - Subcase 2: [ 1.079E-03,  1,  21.91%]
         Subroutines:
         - SubSubcase1: [ 1.008E-03,  1,  93.39%]
     - Routine F: [ 1.850E-03,  1,  24.79%*]
     - Routine A: [ 2.525E-04,  1,  3.39%]
     - Routine 0: [ 1.748E-04,  1,  2.34%]
     - Routine E: [ 6.221E-05,  1,  0.83%]
     - PS_Check: [ 5.464E-05,  2,  0.73%]
 Routine dictionary:
   25734856:
     [ xc_pot, Routine F,  48,  1]
 Global dictionary (size 3):
   25735448:
     [ potential, Routine 0,  24,  1]
   Timestamp of Profile initialization:
     2014-08-27 15:37:35.744
   Process Id:
     0
  #---------------------------------------------------- Entering in OpenMP section if available
 Entering Thread No.                   :  0
 Address of metadata                   :  8014176
 Entering Thread No.                   :  3
 Address of metadata                   :  47417537560448
 Entering Thread No.                   :  1
 Address of metadata                   :  47417537625984
 Entering Thread No.                   :  2
 Address of metadata                   :  47417537593216
 Entering Thread No.                   :  4
 Address of metadata                   :  47417537494912
 Entering Thread No.                   :  5
 Address of metadata                   :  47417537462144
 Entering Thread No.                   :  6
 Address of metadata                   :  47417537429376
 Entering Thread No.                   :  7
 Address of metadata                   :  47417537396608
 Something to use ab                   :  800.0
 Errors found while (de)allocating ab and b:  8
 ERR_ALLOCATE:
   Id                                  : 16
   Message                             : Allocation error
   Action:
     Control the order of the allocation or if the memory limit has been reached
   Callback Procedure Address          : 4583632
 Additional Info                       : Allocation problem, error code  151
 ERR_ALLOCATE:
   Id                                  : 16
   Message                             : Allocation error
   Action:
     Control the order of the allocation or if the memory limit has been reached
   Callback Procedure Address          : 4583632
 Additional Info                       : Allocation problem, error code  151
 ERR_ALLOCATE:
   Id                                  : 16
   Message                             : Allocation error
   Action:
     Control the order of the allocation or if the memory limit has been reached
   Callback Procedure Address          : 4583632
 Additional Info                       : Allocation problem, error code  151
 ERR_ALLOCATE:
   Id                                  : 16
   Message                             : Allocation error
   Action:
     Control the order of the allocation or if the memory limit has been reached
   Callback Procedure Address          : 4583632
 Additional Info                       : Allocation problem, error code  151
 ERR_ALLOCATE:
   Id                                  : 16
   Message                             : Allocation error
   Action:
     Control the order of the allocation or if the memory limit has been reached
   Callback Procedure Address          : 4583632
 Additional Info                       : Allocation problem, error code  151
 ERR_ALLOCATE:
   Id                                  : 16
   Message                             : Allocation error
   Action:
     Control the order of the allocation or if the memory limit has been reached
   Callback Procedure Address          : 4583632
 Additional Info                       : Allocation problem, error code  151
 ERR_ALLOCATE:
   Id                                  : 16
   Message                             : Allocation error
   Action:
     Control the order of the allocation or if the memory limit has been reached
   Callback Procedure Address          : 4583632
 Additional Info                       : Allocation problem, error code  151
 ERR_ALLOCATE:
   Id                                  : 16
   Message                             : Allocation error
   Action:
     Control the order of the allocation or if the memory limit has been reached
   Callback Procedure Address          : 4583632
 Additional Info                       : Allocation problem, error code  151
 Calling sequence of Main program (routines with * are not closed yet):
 - Main program: [ 1.301E-02,  1, ~*]
   Subroutines:
   - PS_Check: [ 8.780E-03,  1,  67.49%]
     Subroutines:
     - Routine D: [ 4.925E-03,  1,  56.09%]
       Subroutines:
       - SubCase 1: [ 2.232E-03,  1,  45.32%]
       - SubCase 3: [ 1.449E-03,  1,  29.42%]
       - Subcase 2: [ 1.079E-03,  1,  21.91%]
         Subroutines:
         - SubSubcase1: [ 1.008E-03,  1,  93.39%]
     - Routine F: [ 2.848E-03,  1,  32.43%]
     - Routine A: [ 3.185E-04,  4,  3.63%]
     - Routine 0: [ 1.748E-04,  1,  1.99%]
     - Routine E: [ 6.221E-05,  1,  0.71%]
     - PS_Check: [ 5.464E-05,  2,  0.62%]
 Global dictionary (size 2):
   Timestamp of Profile initialization:
     2014-08-27 15:37:35.744
   Process Id:
     0
 Summary:
 - Main program: [ 1.423E-02,  1, ~*]
   Subroutines:
   - PS_Check: [ 8.780E-03,  1,  61.70%]
     Subroutines:
     - Routine D: [ 4.925E-03,  1,  56.09%]
       Subroutines:
       - SubCase 1: [ 2.232E-03,  1,  45.32%]
       - SubCase 3: [ 1.449E-03,  1,  29.42%]
       - Subcase 2: [ 1.079E-03,  1,  21.91%]
         Subroutines:
         - SubSubcase1: [ 1.008E-03,  1,  93.39%]
     - Routine F: [ 2.848E-03,  1,  32.43%]
     - Routine A: [ 3.185E-04,  4,  3.63%]
     - Routine 0: [ 1.748E-04,  1,  1.99%]
     - Routine E: [ 6.221E-05,  1,  0.71%]
     - PS_Check: [ 5.464E-05,  2,  0.62%]
---
 test dict_copy:
   original:
     __comment__                       : Grid shifts
     __cond__:
       __master_key__                  : kpt_method
       __when__:
       - MPGrid
     __default__: [0., 0., 0.]
   copy:
     __comment__                       : Grid shifts
     __cond__:
       __master_key__                  : kpt_method
       __when__:
       - MPGrid
     __default__: [0., 0., 0.]
 test dict_update:
   additional:
     __exclusive__:
       123                             : operation 123
       456                             : operation 456
     __default__: [1., 2., 3.]
   after merge:
     __comment__                       : Grid shifts
     __cond__:
       __master_key__                  : kpt_method
       __when__:
       - MPGrid
     __default__: [1., 2., 3.]
     __exclusive__:
       123                             : operation 123
       456                             : operation 456
  #------------------------------------------------------------------------------- Yaml parsing
---
 Key1                                  : field1
 Key2:
   Subkey2-1                           : ciao
   Subkey2-2: [0, hello, 2]
 Key3: [One, Two, Three]
---
 inputvars:
   COMMENT:
     This is the description of the variable as will appear in the logfile
   RANGE: [from, to]
   EXCLUSIVE:
   - Value1                            : comments of value1
   - Value2                            : comment of value2
   CONDITION:
     MASTER_KEY                        : foo
     WHEN: [fooval1, fooval2]
   default                             : value of the default, written as a string
   profile1                            : value1
   profile2                            : value2
---
 Atomic structure:
   Cell: [ 20.34575271606445,  20.34575271606445,  20.34575271606445]
   Positions:
   - Si: [ 0.2516085125E-05,  0.5826606155E-05,  20.34574212] # [  0.00,  0.00,  40.00 ] 1
   - Si: [ 5.094032326,  5.153107111,  0.3047989908E-01] # [  13.52,  10.13,  0.06 ] 2
   - Si: [ 0.3049344014E-01,  5.153107972,  5.094018600] # [  0.08,  10.13,  10.01 ] 3
 Real without format                   : 0.2
 Real with format (1pe25.17)           :  5.0E-01
 Real with format (1pe24.16)           :  5.0000000000000000E-01
 Real with format (es23.16)            :  5.0000000000000000E-01
 Real with format (es24.17)            :  5.00000000000000000E-01
 Real with format (es25.18)            :  5.000000000000000000E-01
 Real with format (es26.19)            :  5.0000000000000022204E-01
 Real with format (es27.20)            :  4.99999999999999777955E-01
 Real with format (es26.19)            :  2.2204460492503130808E-16
 Real with format (es27.20)            : -2.22044604925031308085E-16
 Timings for search: {No. of items:  1, Elapsed time (ns):  0.98}
 Timings for search: {No. of items:  10001, Elapsed time (ns):  0.97}
 Timings for search: {No. of items:  20001, Elapsed time (ns):  0.96}
 Timings for search: {No. of items:  30001, Elapsed time (ns):  0.97}
 Timings for search: {No. of items:  40001, Elapsed time (ns):  0.97}
 Timings for search: {No. of items:  50001, Elapsed time (ns):  0.97}
 Timings for search: {No. of items:  60001, Elapsed time (ns):  0.96}
 Timings for search: {No. of items:  70001, Elapsed time (ns):  0.97}
 Timings for search: {No. of items:  80001, Elapsed time (ns):  0.96}
 Timings for search: {No. of items:  90001, Elapsed time (ns):  0.97}
 Timings for search: {No. of items:  100001, Elapsed time (ns):  0.97}
 Some value                            :  1111033000
 Timings for search: {No. of items:  1, Elapsed time (mus):  7.11}
 Timings for search: {No. of items:  5001, Elapsed time (mus):  46.82}
 Timings for search: {No. of items:  10001, Elapsed time (mus):  82.53}
 Timings for search: {No. of items:  15001, Elapsed time (mus):  119.73}
 Timings for search: {No. of items:  20001, Elapsed time (mus):  166.35}
 Other value                           :  2000000.0
 Memory Consumption Report:
   Tot. No. of Allocations             :  89
   Tot. No. of Deallocations           :  89
   Remaining Memory (B)                :  0
   Memory occupation:
     Peak Value (MB)                   :  0
     for the array                     : weight
     in the routine                    : Routine A
 Max No. of dictionaries used          :  25226 #( 159 still in use)
 Number of dictionary folders allocated:  3
