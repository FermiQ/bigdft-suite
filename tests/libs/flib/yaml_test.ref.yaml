---
  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Yaml Output Module Test
 Test:
   Short sentence                      :  Yes
   Foo: {one:  1, two:  2}
   toto: {one:  1, two:  2}
---
 Test:
   I have a very long sentence in order to test if yaml_output fails to print that:  Yes
   Foo: {one:  1, two:  2}
   toto: {one:  1, two:  2}
---
 Vector of characters                  :  []
 Vector of integers                    :  []
 Vector of double: [ 3.00000E+00,  3.00000E+00,  3.00000E+00,  3.00000E+00,  3.00000E+00, 
                     3.00000E+00,  3.00000E+00,  3.00000E+00,  3.00000E+00,  3.00000E+00, 
                     3.00000E+00]
 Vector of real(kind=8): [ 3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.]
---
  #This document checks the call yaml_comment().
  # [  1.0000000000,  1.0000000000,  1.0000000000,  1.0000000000,  1.0000000000 ]
  #See if this very long comment is correctly treated: [  1.0000000000,  1.0000000000,  
  #1.0000000000,  1.0000000000,  1.0000000000 ]
 Map:
   One                                 :  1
    #No blank 
    #charactersxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    #xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    #xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    #xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    #xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    #xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    #
    #yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
    #yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
    #yyyyyyyyyyyyyy
    #     yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
    #     yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
    #     yyyyyyyyyyyyyyyyyyyyyyyy
---
  #Now we test dictionaries inside yaml.
 toto                                  : 1
 titi                                  : 1.00000000000000000E+00
 tutu: [1, 2]
 List: [a: 0, 4, 1.000000000E+00]
 New key: {Example: 4}
  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Fortran Dictionary Test
 Number of Groups                      : 1
 First: {One: 1, Two: 2, Three: 3, Threeb: 3b}
 After pop:
   Number of Groups                    : 1
   First:
     Three                             : 3
     Threeb                            : 3b
     Four                              : 4
 Complete pop:
   Number of Groups                    : 1
 Key found                             :  No
 Second try, Key found                 :  Yes
 Value found                           :  1
 Alternative way                       :  2
 Dictionary associated before last pop :  Yes
 Last pop done, still associated       :  No
 Stack:
 - 5
 - 4
 - 2
 - Test1:
     Toto                              : 5
     Titi                              : 6
 Stack2:
 - 1
 - 2
 - 3
 Stack:
 - 5
 - 4
 Stack2:
 - 1
 - 2
 - 3
  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Prepend dictionary example
 Dict A:
   Stack:
   - 5
   - 4
   Stack2:
   - 1
   - 2
   - 3
 Dict 2:
   Test1:
     Toto                              : 5
     Titi                              : 6
   Test2:
     Toto                              : 4
     Titi                              : 2
 Prepended:
   Test1:
     Toto                              : 5
     Titi                              : 6
   Test2:
     Toto                              : 4
     Titi                              : 2
   Stack:
   - 5
   - 4
   Stack2:
   - 1
   - 2
   - 3
---
  #Sandbox
  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Routine-Tree creation example
 Test Case before implementation:
   Routine Tree:
   - Routine 0
   - Routine A
   - Routine B
   - Routine C
   - Routine D:
     - SubCase 1
     - Subcase 2:
       - SubSubCase1
     - SubCase 3
   - Routine E
   - Routine F
 Status of the memory at finalization:
   Timestamp of Profile initialization:
     2013-03-27 14:27:54.232
   Process Id:
     0
 Memory Consumption Report:
   Tot. No. of Allocations  : 6
   Tot. No. of Deallocations: 6
   Remaining Memory (B)     : 0
   Memory occupation: 
      Peak Value (MB): 0
      for the array: rhopot
      in the routine: PS_Check
