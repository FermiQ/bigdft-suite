######################## compilers and flags ####################################

#Athena intel(FFTW)
#Link = $(F95)
#F95 = mpif90 -g -C  -i_dynamic -L/soft/intel/mkl/9.0/lib/em64t  -lmkl_lapack -lmkl_em64t -lguide -lpthread
#F77 = mpif90 -g -C -i_dynamic
#FFLAGS =
#LIBRARIES = -L/soft/intel/mkl721/lib/em64t  /usr/lib64/libfftw3.a -lmkl_lapack -lmkl_em64t -lguide -lpthread

#Athena intel
#Link = $(F95)
#F95 = mpif90  -i_dynamic -L/soft/intel/mkl/9.0/lib/em64t  -lmkl_lapack -lmkl_em64t -lguide -lpthread
#F77 = mpif90  -i_dynamic
#FFLAGS =
#LIBRARIES = -L/soft/intel/mkl721/lib/em64t  -lmkl_lapack -lmkl_em64t -lguide -lpthread

#Athena g95
#Link = $(F95)
#F95 = mpif90 -L/soft/intel/mkl/9.0/lib/em64t  -lmkl_lapack -lmkl_em64t -lguide -lpthread
##F95 = mpif90 /soft/g95-install/bin/g95 -L/soft/intel/mkl/9.0/lib/em64t  -lmkl_lapack -lmkl_em64t -lguide -lpthread
#F77 = /soft/g95-install/bin/g95
#FFLAGS = -C -g
#LIBRARIES = -L/soft/intel/mkl721/lib/em64t  -lmkl_lapack -lmkl_em64t -lguide -lpthread


#Athena lapack
#Link = $(F95)
#F95 = mpif90  -L/soft/acml4.0.1/pathscale64_mp/lib  -I/soft/acml4.0.1/pathscale64_mp/include -lacml_mp -lacml_mv -mp -lpthread
#F77 = mpif90
#FFLAGS =
#LIBRARIES = -L/soft/acml4.0.1/pathscale64_mp/lib -I/soft/acml4.0.1/pathscale64_mp/include -lacml_mp -lacml_mv -mp -lpthread

#Cronos scali
#Link = $(F95) 
#F95 = /opt/intel/fc/9.0/bin/ifort  -I/opt/scali/include
#-openmp
#F77 = /opt/intel/fc/9.0/bin/ifort
#FFLAGS =
#LIBRARIES = /opt/intel/mkl72/lib/32/libmkl_lapack.a /opt/intel/mkl72/lib/32/libmkl_ia32.a -L/opt/intel/mkl72/lib/32/ -lguide -lpthread  -D_REENTRANT -L/opt/scali/lib -lfmpi -lmpi

##Palu:
#Link = ftn
# pathscale compiler
#F95 = /opt/xt-mpt/1.5.47/mpich2-64/PSP2/bin/mpif90
#F77 = /opt/xt-mpt/1.5.47/mpich2-64/PSP2/bin/mpif77
#FFLAGS =

# pgi compiler
#F95 = /opt/xt-pe/1.5.47/bin/snos64/ftn
#F77 = /opt/xt-pe/1.5.47/bin/snos64/ftn
#FLAGS =  -O2 -fastsse -Mcache_align -Minfo -Mnoprefetch -Mipa=fast

#Grenoble Workstations compilers
F95 =ompif90 -O2
F77 =ompif90 -O2
LIBRARIES = -L/usr/lib/lapack-g95  -llapack -lblas 
Link = $(F95) 

######################################################################

all: cluster memguess


LIBCUTIL=lib/CUDA/libcutil.a
#LIBRARIES += -L/usr/local/cuda/lib/ -lcudart CUDA/libGPU.a $(LIBCUTIL)

#CUDAlib : libGPU
#GPUCONV_INTERFACE = 
#GPUBLAS_INTERFACE =

#TOGGLE THESE IF YOU DO NOT WANT CUDA INTERFACES (and comment LIBRARIES statement above)
CUDAlib : 
GPUCONV_INTERFACE = convolutions/interface_cuda_fake.f90
GPUBLAS_INTERFACE = modules/cublas_fake.f90

libGPU: 
	cd CUDA;\
	make -f Makefile.standalone libCUDA


high_level = cluster.f90 \
	input_variables.f90 \
	init.f90 \
	sumrho.f90 \
	hpsiortho.f90 \
	forces.f90 \
	tail.f90 \
	restart.f90 \
	geometry.f90 \
	davidson.f90

#objects which can be compiled whithout any dependence
low_level = init/projectors.f90  \
	init/ionicpot.f90 \
	init/gridmanipulation.f90 \
	init/gauprod.f90 \
	init/denspotd.f90 \
	init/logrid.f90 \
	init/logrid_per.f90 \
	init/inputguess.f90 \
	init/gautowav.f90 \
	init/eleconf.f90 \
	init/locreg.f90 \
	init/sysprop.f90 \
	init/gaussians.f90 \
	wfn_opt/precond.f90 \
	wfn_opt/orthogonality.f90 \
	wfn_opt/diis.f90 \
	wfn_opt/applyh.f90 \
	wfn_opt/precond_per_optim.f90 \
	wfn_opt/precond_hyb.f90 \
	wfn_opt/precond_slab.f90 \
	wfn_opt/kernel_per_optim.f90 \
	wfn_opt/kernel_slab_simple.f90 \
	wfn_opt/fft_per.f90 \
	wfn_opt/fft2d.f90 \
	wavelib/transwaves.f90 \
	wavelib/scalprod.f90 \
	wavelib/plotting.f90 \
	wavelib/i-o.f90 \
	wavelib/un-compress.f90 \
	wavelib/razero.f90 \
	wavelib/gauss_to_daub.f90 

abinit = ABINIT-ewald/ewald.F90 \
	 ABINIT-ewald/metric.F90 \
	 ABINIT-ewald/matr3inv.F90 \
	 ABINIT-ewald/derfc.F90 

SOURCES = $(low_level) \
	$(high_level)

MODULES_BIGDFT = modules/base.f90 \
	modules/types.f90 \
	modules/interfaces.f90 \
	$(GPUBLAS_INTERFACE)


#profiling sources
SOURCES_TIME = profiling/time.f90 \
	profiling/memory.f90 \
	profiling/memoryestimator.f90

#convolutions libraries
SOURCES_CONVOLUTIONS = convolutions/combined_shrink_optim.f90 \
	convolutions/combined_grow_optim.f90 \
	convolutions/growshrink.f90 \
	convolutions/growshrink_hyb_optim.f90 \
	convolutions/growshrink_hyb_common.f90 \
	convolutions/convolut_ib_optim.f90 \
	convolutions/conv_per_optim.f90 \
	convolutions/conv_per_common.f90 \
	convolutions/convolut_common_slab.f90 \
	convolutions/convolut_common_per.f90 \
	convolutions/convolut_optim_per.f90 \
	convolutions/convolut_new_per.f90 \
	convolutions/convolut_optim_slab.f90 \
	$(GPUCONV_INTERFACE)

MODULES_ABINIT= PSolver/ABINIT-common/defs_basis.F90 \
        PSolver/ABINIT-common/defs_datatypes.F90 \
        PSolver/ABINIT-common/defs_xc.F90  \
	PSolver/ABINIT-common/drivexc.F90 
XC_ABINIT = PSolver/ABINIT-common/xctetr.F90 \
        PSolver/ABINIT-common/xcwign.F90 \
        PSolver/ABINIT-common/xcxalp.F90 \
        PSolver/ABINIT-common/xchelu.F90 \
        PSolver/ABINIT-common/xcpzca.F90 \
        PSolver/ABINIT-common/xcspol.F90 \
        PSolver/ABINIT-common/xchcth.F90 \
        PSolver/ABINIT-common/xclb.F90 \
        PSolver/ABINIT-common/xcpbe.F90 \
        PSolver/ABINIT-common/invcb.F90 \
        PSolver/ABINIT-common/size_dvxc.F90

SOURCES_MODULES = $(MODULES_BIGDFT) $(MODULES_ABINIT_PP)

SOURCES_ABINIT = $(XC_ABINIT) $(abinit)

SOURCES_POISSON = \
   PSolver/Poisson_Solver.f90

SOURCES_MOD = PSolver/PSolver_Main.f90 \
   PSolver/Build_Kernel.f90 \
   PSolver/PSolver_Base.f90 \
   PSolver/xcenergy.f90 \
   PSolver/3Dgradient.f90 \
   PSolver/fft3d.f90 \
   PSolver/scaling_function.f90

MODULES_ABINIT_PP = $(MODULES_ABINIT:.F90=.f90)

OBJECTS_ABINIT_PP = $(SOURCES_ABINIT:.F90=.f90)

$(OBJECTS_ABINIT_PP): %.f90: %.F90
	cpp -P $< $@

$(MODULES_ABINIT_PP): %.f90: %.F90
	cpp -P $< $@


OBJECTS_F95 = $(SOURCES:.f90=.o)
OBJECTS_TIME = $(SOURCES_TIME:.f90=.o)
OBJECTS_ABINIT = $(OBJECTS_ABINIT_PP:.f90=.o)
OBJECTS_POISSON = $(SOURCES_POISSON:.f90=.o)
OBJECTS_CONVOLUTIONS = $(SOURCES_CONVOLUTIONS:.f90=.o)
OBJECTS_MODULES = $(SOURCES_MODULES:.f90=.o)


$(OBJECTS_MODULES): %.o: %.f90
	$(F95) $(FFLAGS) -I.. -c $< -o $@

$(OBJECTS_F95): %.o: %.f90
	$(F95) $(FFLAGS) -I.. -c $< -o $@

$(OBJECTS_TIME): %.o: %.f90
	$(F95) $(FFLAGS) -I.. -c $< -o $@

$(OBJECTS_PROJECTORS): %.o: %.f90
	$(F95) $(FFLAGS) -I.. -c $< -o $@

$(OBJECTS_ABINIT): %.o: %.f90
	$(F95) -IPSolver/ABINIT-common -c $< -o $@

$(OBJECTS_POISSON): %.o: %.f90
	$(F95) $(FFLAGS) -c $< -o $@

$(OBJECTS_CONVOLUTIONS): %.o: %.f90
	$(F95) $(FFLAGS) -I.. -c $< -o $@



#COBJECTS = 
#COBJECTS = clsfunc.o  \
#	minimize.o \
#	nrutil.o \
#	tblink.o \
#	tbnorth.o

OBJECTS = $(OBJECTS_ABINIT) $(OBJECTS_POISSON) \
		  $(OBJECTS_CONVOLUTIONS) $(OBJECTS_F95) $(OBJECTS_TIME) \
		  $(OBJECTS_PROJECTORS) $(COBJECTS) $(GPU_OBJECTS) BigDFT.f90

OBJECTS_TEST =  $(OBJECTS_ABINIT) $(OBJECTS_POISSON) \
				$(OBJECTS_CONVOLUTIONS) $(OBJECTS_F95) $(OBJECTS_TIME) \
				$(OBJECTS_PROJECTORS) memguess.f90

OBJECTS_MINHOP =  $(OBJECTS_ABINIT) $(OBJECTS_POISSON) \
                                $(OBJECTS_CONVOLUTIONS) $(OBJECTS_F95) $(OBJECTS_TIME) \
                                $(OBJECTS_PROJECTORS) global.f90



cluster: $(OBJECTS_MODULES) $(OBJECTS) CUDAlib
	$(Link) -o cluster $(OBJECTS_MODULES) $(OBJECTS) $(LIBRARIES) 

memguess: $(OBJECTS_MODULES) $(OBJECTS_TEST) CUDAlib
		$(Link) -o memguess $(OBJECTS_MODULES) $(OBJECTS_TEST) $(LIBRARIES)


minhop: $(OBJECTS_MODULES) $(OBJECTS_MINHOP) CUDAlib
	$(Link) -o minhop $(OBJECTS_MODULES) $(OBJECTS_MINHOP) $(LIBRARIES) 



clean:
	rm -f *.o cluster memguess *.mod */*.mod *~ PSolver/*.o PSolver/*~ \
	convolutions/*.o profiling/*.o init/*.o wfn_opt/*.o wavelib/*.o \
	ABINIT-ewald/*.f90 ABINIT-ewald/*.o PSolver/ABINIT-common/*.f90 \
	PSolver/ABINIT-common/*.o PSolver/ABINIT-common/*~ modules/*~ modules/*.o \
	CUDA/*.o CUDA/*.a

tar:
	make clean
	tar czvf all.tgz Makefile.standalone Makefile *.f90 RE* PSolver/* PSolver/ABINIT-common/*.F90 init/* convolutions/*.f90 convolutions/*.inc wfn_opt/* wavelib/* profiling/*.f90  ABINIT-ewald/*.F90 modules/*.f90 CUDA/*.c* CUDA/*.f90 CUDA/*.h* lib

#Dependencies:
$(OBJECTS) : $(OBJECTS_MODULES)

$(OBJECTS_ABINIT) : $(OBJECTS_MODULES)

cluster.o geometry.o: PSolver/Poisson_Solver.o
PSolver/Poisson_Solver.o: $(SOURCES_MOD) $(SOURCES_ABINIT)

convolutions/combined_grow_simple.o : convolutions/v_17.inc
convolutions/combined_grow_optim.o : convolutions/v_17.inc
convolutions/combined_shrink_simple.o : convolutions/v.inc
convolutions/combined_shrink_optim.o convolutions/convolution_prev.o : \
	convolutions/v.inc \
	convolutions/v_long.inc

modules/interfaces.o: modules/types.o modules/base.o
modules/types.o: modules/base.o

$(high_level:.f90=.o) : $(OBJECTS_MODULES)

test_forces.o: $(mod_bigdft)

BigDFT.o: interfaces.o \
	PSolver/Poisson_Solver.o 

init/denspotd.o init/ionicpot.o init.o : PSolver/Poisson_Solver.o 

profiling/memoryestimator.o : PSolver/Poisson_Solver.o 

$(XC_ABINIT:.f90=.o) : PSolver/ABINIT-common/defs_basis.o

PSolver/ABINIT-common/defs_datatypes.o: PSolver/ABINIT-common/defs_basis.o

PSolver/ABINIT-common/defs_xc.o: PSolver/ABINIT-common/defs_datatypes.o

PSolver/ABINIT-common/drivexc.o: PSolver/ABINIT-common/defs_basis.o PSolver/ABINIT-common/defs_xc.o

