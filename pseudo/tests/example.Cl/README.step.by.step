Notice
------
* Take a look at "atom.dat". It gives two configurations, one closed shell, one polarized.
* Run "atom"
* Notice the lines appended to "FITPAR", "weights.par" and "psppar"
* Notice "atom.01.ae" is assigned a weight of 1d-3 on the first line
* Change the weight in "atom.01.ae" to one, we will need that later
* Take a look at "input.dat". It should include -c0 on the first line -> no fitting
* Run "pseudo" in serial to test for the accuracy of the GTH fit in closed shell ("atom.00.ae")
* Compare the output with "closed.shell.GTH.out"
* Run "pseudo" in parallel using two MPI processes
* Stdout should give the same accuracies for eigenvalues charges, etc
* The file "process.01.out" gives the corresponding output for configuration "atom.01.ae"
* Compare accuracies in "process.01.ae" with "polarized.GTH.out"
* Replace "input.dat" with "input.dat.shortfit". This includes -c1 and -n100 on the first line
* Run "pseudo" with two MPI processes
* The fits output should behave in a similar way as "short.fit.out"
* "Process.01.out" can be compared with "short.fit.out.process.01.out" accordingly
* The resulting "psppar" from "short.fit.out" are stored in "psppar.input.nlcc"
* As the name suggests, "psppar.input.nlcc" also contains an input guess for rcore and zcore
* Set the two params for rcore and zcore to "t" in "FITPAR" to enable fitting of these terms
* Remove the -n200 flag from "input.dat" 
* Run "pseudo" again with two MPI processes 
* The fit should be able to improve the pseudopotential significantly
* The results i got are found in "psppar.nlcc3", "nlcc.1.fit" to "nlcc.3.fit" and "nlcc.3.fit.process.01.out"

