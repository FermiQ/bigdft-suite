

______________________________________
 
   About Nonlinear Core Corrections
______________________________________


This version of pseudo can fit pseudopotentials for DFT calculations with a nonlinear core correction.
For this purpose, a simple analytic approximation of the core charge density will be described by
few parameters that may be included as additional free parameters for the fitting procedure. The model
core charge density will be taken into account only for the exchange correlation terms. 

For the sake of simplicity and stable fits with less degrees of freedom, this version of pseudo
only supports the trivial case of one single Gaussian without a contraction. The inclusion of
additional parameters for a more flexible analytic form of the core charge still needs testing.

BigDFT is able to read such parameters from optional input files, one per chemical element.
The file nllc.Xy, where Xy is the atom label, contains Gaussian coefficients for possibly both,
the valence and total charge density. The first line gives the number of Gaussians for the valence.
For each of these, one line follows with four coefficients
                                                             sigma_k c0_k c2_k c4_k c6_k
The density is the sum over the Gaussians 
                                                          rho(r) = 4pi* sum( g_k(r) p_k(r) )
where each Gausian 
                                                          g_k(r)= exp( -0.5(r/sigma_k)**2 )
is contracted with a polynomial
                                                               p_k(r) = sum( r**j cj_k)

After the coefficients of the valence charge, the total charge is given in the very same format,
with a leading line that gives the possibly different number of Gaussians. The core charge,
of course, will be taken as the difference of the two charges.

The fitting parameters for pseudo are
                                                                    rcore = sigma_1
and the overall charge integral 
                                                        zcore =   ampl / (sqrt(2pi)*rcore)**3
                                                              =   c0_1 *sigma_1**3 * sqrt(pi/2)

These parameters are NOT read from a separate input file, even though pseudo will output a file nlcc
for usage with BigDFT. Instead, the parameters rcore and znuc are optional inputs in the file psppar
read from line number five, for example
                                                       2  0.4  3.5   nsep, rcore, zcore 

The first variable nsep (number of l channels for the separable part) is mandatory, the following
inputs for the NLCC are not. Similarly, the file FITPAR, that defines which parameters shall remain
constant during the fit, has optional entries for these two parameters on line number four, which
are also read after the number of separable terms
                                                       2   t    t    nsep, rcore, zcore 

The recommended strategy when doing a fit with NLCC is to first model the core charge density as
returned by the all electron program in the file ae.core.dens.plt. Fitting the gaussian with gnuplot
should be simple. The interactive gnuplot script gplt.fit.NLCC(.again) created by atom.f should
help with this. The file nlcc.gnuplt written out by pseudo whenever zcore is nonzero is also useful
to plot the current core charge as it was read from psppar.
The Gaussian should model the all electron core charge in the region where it overlaps with the
valence charge (notice the file ae.valence.dens.plt). During the fit, the model core charge can
change significantly, as the valance pseudowavefunctions differ from their all electron counterparts
in that region, and the fit will attempt to compensate for deviations in the nonlinear terms with
the core charge. Therefore, the preprocessing of rcore and zcore does not need to be done very
carefully, but should speed up the calculation with a reasonable input guess.

Note: pseudo also supports another simple analytic form of the core charge that has an exponential
tail. However, this should not be of relevance here. See the sources gatom.f for more information.

